#!/bin/bash

# PS Games Catalog - Configura√ß√£o AWS S3 para Backup
# Script para criar bucket S3 e configurar credenciais

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üå•Ô∏è  PS Games Catalog - Configura√ß√£o AWS S3${NC}"
echo

# Gerar nome √∫nico para o bucket
TIMESTAMP=$(date +%s)
BUCKET_NAME="ps-games-backup-${TIMESTAMP}"
REGION="us-east-1"  # Regi√£o gratuita

echo -e "${YELLOW}üìã Configura√ß√µes:${NC}"
echo "- Bucket Name: $BUCKET_NAME"
echo "- Regi√£o: $REGION"
echo

# Verificar se AWS CLI est√° configurado
echo -e "${YELLOW}üîç Verificando configura√ß√£o AWS...${NC}"
if ! aws sts get-caller-identity >/dev/null 2>&1; then
    echo -e "${RED}‚ùå AWS CLI n√£o est√° configurado!${NC}"
    echo
    echo -e "${YELLOW}Para configurar o AWS CLI:${NC}"
    echo "1. Acesse: https://console.aws.amazon.com/iam/home#/users"
    echo "2. Crie um usu√°rio para backup com as permiss√µes:"
    echo "   - AmazonS3FullAccess (ou pol√≠tica customizada)"
    echo "3. Gere Access Key ID e Secret Access Key"
    echo "4. Execute: aws configure"
    echo
    exit 1
fi

# Obter informa√ß√µes da conta
ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
echo -e "${GREEN}‚úÖ AWS configurado - Account ID: $ACCOUNT_ID${NC}"

# Criar bucket S3
echo -e "${YELLOW}ü™£ Criando bucket S3...${NC}"
if aws s3 mb s3://$BUCKET_NAME --region $REGION; then
    echo -e "${GREEN}‚úÖ Bucket criado com sucesso: $BUCKET_NAME${NC}"
else
    echo -e "${RED}‚ùå Erro ao criar bucket. Tentando com nome alternativo...${NC}"
    BUCKET_NAME="ps-games-backup-$(uuidgen | tr '[:upper:]' '[:lower:]' | cut -d'-' -f1)"
    if aws s3 mb s3://$BUCKET_NAME --region $REGION; then
        echo -e "${GREEN}‚úÖ Bucket criado com sucesso: $BUCKET_NAME${NC}"
    else
        echo -e "${RED}‚ùå Erro ao criar bucket S3${NC}"
        exit 1
    fi
fi

# Configurar lifecycle para otimizar custos
echo -e "${YELLOW}‚ôªÔ∏è  Configurando lifecycle para reduzir custos...${NC}"
cat > lifecycle.json << EOF
{
    "Rules": [
        {
            "ID": "ps-games-backup-lifecycle",
            "Status": "Enabled",
            "Filter": {
                "Prefix": "backups/"
            },
            "Transitions": [
                {
                    "Days": 30,
                    "StorageClass": "STANDARD_IA"
                },
                {
                    "Days": 90,
                    "StorageClass": "GLACIER"
                },
                {
                    "Days": 365,
                    "StorageClass": "DEEP_ARCHIVE"
                }
            ],
            "Expiration": {
                "Days": 2555
            }
        }
    ]
}
EOF

if aws s3api put-bucket-lifecycle-configuration --bucket $BUCKET_NAME --lifecycle-configuration file://lifecycle.json; then
    echo -e "${GREEN}‚úÖ Lifecycle configurado (otimiza√ß√£o de custos)${NC}"
    rm lifecycle.json
else
    echo -e "${YELLOW}‚ö†Ô∏è  Aviso: N√£o foi poss√≠vel configurar lifecycle${NC}"
    rm -f lifecycle.json
fi

# Configurar versionamento (opcional, para recupera√ß√£o de vers√µes)
echo -e "${YELLOW}üìù Configurando versionamento...${NC}"
if aws s3api put-bucket-versioning --bucket $BUCKET_NAME --versioning-configuration Status=Enabled; then
    echo -e "${GREEN}‚úÖ Versionamento habilitado${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Aviso: N√£o foi poss√≠vel habilitar versionamento${NC}"
fi

# Salvar configura√ß√µes
echo -e "${YELLOW}üíæ Salvando configura√ß√µes...${NC}"
cat > ~/.ps-games-s3-config << EOF
# PS Games Catalog - Configura√ß√£o S3
S3_BUCKET_NAME="$BUCKET_NAME"
S3_REGION="$REGION"
S3_PREFIX="backups/"
AWS_ACCOUNT_ID="$ACCOUNT_ID"
CREATED_DATE="$(date)"
EOF

echo -e "${GREEN}‚úÖ Configura√ß√µes salvas em ~/.ps-games-s3-config${NC}"

# Teste de conectividade
echo -e "${YELLOW}üß™ Testando conectividade...${NC}"
echo "Teste de conectividade - $(date)" > test-file.txt
if aws s3 cp test-file.txt s3://$BUCKET_NAME/test/test-file.txt; then
    echo -e "${GREEN}‚úÖ Teste de upload bem-sucedido${NC}"
    aws s3 rm s3://$BUCKET_NAME/test/test-file.txt
    echo -e "${GREEN}‚úÖ Teste de remo√ß√£o bem-sucedido${NC}"
    rm test-file.txt
else
    echo -e "${RED}‚ùå Erro no teste de conectividade${NC}"
    rm -f test-file.txt
    exit 1
fi

echo
echo -e "${GREEN}üéâ Configura√ß√£o S3 conclu√≠da com sucesso!${NC}"
echo
echo -e "${BLUE}üìã Informa√ß√µes importantes:${NC}"
echo "- Bucket Name: $BUCKET_NAME"
echo "- Regi√£o: $REGION"
echo "- Configura√ß√£o salva em: ~/.ps-games-s3-config"
echo
echo -e "${YELLOW}üí∞ Otimiza√ß√µes de Custo Configuradas:${NC}"
echo "- Ap√≥s 30 dias: Move para Standard-IA (menor custo)"
echo "- Ap√≥s 90 dias: Move para Glacier (muito menor custo)"
echo "- Ap√≥s 365 dias: Move para Deep Archive (custo m√≠nimo)"
echo "- Ap√≥s 7 anos: Remove automaticamente"
echo
echo -e "${GREEN}‚úÖ Agora voc√™ pode executar o backup-s3.sh!${NC}" 